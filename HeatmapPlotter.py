import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Provided data
data = [-32.27540152,
-32.27031772,
-32.27085644,
-32.28030222,
-32.28406927,
-32.30850267,
-32.3090256,
-32.33196544,
-32.35215423,
-32.35995161,
-32.37162731,
-32.38355425,
-32.40256842,
-32.41612002,
-32.43359502,
-32.43982429,
-32.45009054,
-32.45609832,
-32.48163554,
-32.48367846,
-32.50417892,
-32.51258143,
-32.53489474,
-32.55192893,
-32.56797167,
-32.58811966,
-32.61478701,
-32.62696337,
-32.64546438,
-32.66875131,
-32.67929443,
-32.69975537,
-32.71112233,
-32.71822183,
-32.73097016,
-32.74078937,
-32.7562554,
-32.77296319,
-32.78676921,
-32.79973139,
-32.80775901,
-32.8239384,
-32.84406959,
-32.85553133,
-32.86916396,
-32.88434269,
-32.90039807,
-32.90709103,
-32.91374489,
-32.93503436,
-32.94687671,
-32.96754376,
-32.98736776,
-33.00428809,
-33.01758711,
-33.0321816,
-33.0451126,
-33.0666723,
-33.084621,
-33.0990607,
-33.11748034,
-33.12632972,
-33.14522447,
-33.15702697,
-33.15643232,
-33.17508282,
-33.18853612,
-33.20153115,
-33.21029365,
-33.22414489,
-33.23820208,
-33.24880516,
-33.2681601,
-33.27572794,
-33.29037356,
-33.30293734,
-33.31479112,
-33.33041662,
-33.33451297,
-33.35880161,
-33.359719,
-33.37894532,
-33.39959165,
-33.42211957,
-33.43749612,
-33.46114462,
-33.47838919,
-33.48813083,
-33.50511262,
-33.52774189,
-33.5413174,
-33.55082484,
-33.5672416,
-33.57267867,
-33.58392753,
-33.60228054,
-32.17040237,
-33.63279175,
-33.63087845,
-33.64267281,
-33.65899858,
-33.66658122,
-33.68249455,
-33.69469056,
-33.70319176,
-33.71647973,
-33.725271,
-33.74450384,
-33.74729971,
-33.76021877,
-33.76643481,
-33.78324269,
-33.78542709,
-33.80011898,
-33.81555657,
-33.83173199,
-33.85197715,
-33.86987496,
-33.88890689,
-33.89869774,
-33.91742922,
-33.92416034,
-33.94070846,
-33.95437812,
-33.96621127,
-33.98740825,
-34.00539478,
-34.02201116,
-34.02283876,
-34.04066106,
-34.05145894,
-34.07514631,
-34.08244638,
-34.0977123,
-34.10925273,
-34.12702113,
-34.13911836,
-34.15815128,
-34.16638184,
-34.18040927,
-34.19697834,
-34.21193409,
-34.2297606,
-34.23795874,
-34.23878968,
-34.25775622,
-8.393762706,
-34.28652242,
-34.29597815,
-34.31196414,
-31.08220263,
-19.61329387,
-34.34888003,
-34.36369479,
-34.37550304,
-34.39045829,
-34.40509684,
-34.421693,
-34.44379308,
-34.45382146,
-34.46954083,
-34.4723514,
-34.4938277,
-34.51017142,
-34.52538212,
-34.53321733,
-34.54470985,
-34.55673135,
-12.85673666,
-34.59635624,
-25.8023826,
-34.62683092,
-34.6452642,
-34.66608891,
-34.68689933,
-34.69944974,
-34.70212384,
-34.7210816,
-34.73217163,
-34.74649627,
-34.76088631,
-34.772434,
-34.79228764,
-34.80670089,
-34.82449236,
-34.83383902,
-34.84167848,
-34.85251596,
-34.8690734,
-34.88035711,
-34.89498989,
-34.90539555,
-34.91805531,
-34.93064097,
-34.93812103,
-34.95337485,
-34.96427539,
-4.377522158,
-34.99967644,
-35.0060061,
-35.02853064,
-35.03790557,
-35.05350165,
-35.06851622,
-35.0828675,
-35.09448016,
-35.10481018,
-35.11594934,
-35.1142734,
-35.12971214,
-35.13844124,
-35.15650858,
-35.16617915,
-35.17252925,
-35.19384542,
-35.20233268,
-35.21207992,
-35.23600653,
-35.24140151,
-35.25638848,
-35.26450844,
-35.27832859,
-35.29129827,
-35.30220777,
-35.30182826,
-30.82114571,
-35.31716,
-35.32465409,
-35.33169015,
-35.33419614,
-35.34400801,
-35.35202337,
-35.35422557,
-35.35476174,
-35.36090374,
-35.364451,
-35.36301718,
-35.37412444,
-35.37572205,
-35.38170964,
-35.38129697,
-35.39569807,
-35.40312045,
-35.40960091,
-35.42067538,
-34.22727826,
-35.43624438,
-35.45231559,
-28.87964371,
-35.46816249,
-35.47874198,
-33.53292175,
-35.49144895,
-35.49703609,
-34.0029285,
-35.49357966,
]

indices = [i for i in range(256)]

# Size of the desired matrix
n = 16

# Create a 16x16 matrix of NaNs
matrix_size = 16
matrix = np.full((matrix_size, matrix_size), np.nan)

# Fill the matrix
for idx, val in zip(indices, data):
    # Calculate row and column from index
    row = idx // matrix_size
    col = idx % matrix_size
    # Set the value in the matrix
    matrix[row, col] = val

# Plotting the heatmap
plt.figure(figsize=(8, 8))  # Increase figure size for better visibility
sns.heatmap(matrix, annot=True, fmt=".3g", linewidths=.5, square=True, cmap='YlOrBr', annot_kws={"size": 6})
plt.title('Retract Attractive Force Heatmap (nN)')
plt.xlabel('X Position')
plt.ylabel('Y Position')
plt.show()
plt.savefig('Retract heatmap.png')
plt.close()
