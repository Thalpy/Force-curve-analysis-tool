import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Provided data
data = [-2.522085938,
3.709864098,
-2.354445055,
-2.668285881,
-2.37994987,
-3.100954558,
-1.319943373,
-1.42744182,
-0.445712954,
-0.726092415,
-1.501363605,
-1.981905956,
-0.322082298,
-0.807520912,
-1.136326767,
-0.658370629,
-2.619959124,
-1.943879361,
-0.786201975,
-3.063732276,
-2.669283654,
-2.249085083,
-2.491997379,
-3.075578051,
-0.529733459,
-3.377464144,
-2.59880241,
-1.850122032,
1.707585195,
-3.354394418,
-2.384279267,
-1.765908189,
-1.513503711,
3.795706672,
-3.247400447,
-1.798428364,
6.5087222,
-3.428390078,
-4.584098079,
-0.561156141,
-1.351762805,
0.528969876,
-1.2555486,
-3.667576058,
-2.843047289,
-0.856622502,
4.354764311,
-2.282459232,
-1.974823451,
-0.915294008,
-1.176036055,
-1.39043177,
-1.258382613,
-2.028684684,
0.625633457,
3.472687297,
-2.655980848,
-2.511237005,
-3.092634716,
-1.889030821,
4.719812876,
-2.810776115,
-2.417775077,
-0.929840667,
-0.137427165,
4.866296978,
-0.166617136,
5.650661213,
-3.119588612,
-2.551156693,
3.994251307,
4.921023595,
1.435975258,
-0.512085707,
-1.419132912,
0.804789767,
-1.399151208,
-0.032081665,
5.996471199,
5.680310946,
4.472441648,
-0.887639533,
-1.310730441,
3.757424903,
-0.625345401,
-1.899837361,
0.490535581,
0.678230036,
-0.015289845,
1.130702295,
0.600545203,
1.522759794,
0.096071039,
6.143644088,
1.094721254,
5.094136724,
1.617865218,
-0.109675036,
0.247446966,
0.326203998,
0.295502236,
2.49044485,
6.217628329,
0.666234729,
3.664511637,
3.092022543,
1.52857319,
-0.341377693,
-0.294183456,
2.523063802,
5.197032457,
0.802247325,
4.391187513,
4.999305864,
1.536705332,
0.054767363,
3.309585426,
0.799063667,
1.499060219,
2.429460128,
5.569089553,
1.112399881,
5.387250088,
1.522613175,
0.250842082,
-0.448502025,
2.206240413,
2.158424351,
1.584590985,
0.564870341,
3.217760813,
1.283245778,
6.789781313,
5.830172904,
0.139291173,
0.587028841,
0.961623732,
6.531456561,
1.738981456,
-1.36875532,
-0.582479788,
0.432981267,
-0.419569068,
1.005588351,
3.462065334,
2.084801189,
2.411958294,
1.283539948,
1.725536815,
2.543443753,
2.725184621,
0.22077079,
2.862135548,
4.155625635,
4.297192611,
4.923849479,
2.231828917,
5.609377411,
4.349403442,
4.820449221,
4.966300774,
1.355815259,
0.711712036,
4.727804733,
4.468214999,
0.794680197,
3.441224642,
1.532779719,
1.524937306,
2.869601262,
6.479976327,
4.987782765,
4.386066877,
0.473168658,
5.721665587,
4.958310315,
4.529918754,
0.97831129,
3.111270377,
6.74503123,
3.076813279,
5.261325534,
2.712298251,
1.93433032,
4.318759625,
5.48180268,
4.568559443,
2.866638089,
6.415235795,
3.562146535,
4.021371487,
3.420598987,
0.827110224,
4.230912742,
5.984035841,
2.69012677,
3.507067149,
3.884952214,
5.127916698,
6.101417726,
3.095753557,
6.323583082,
6.059288265,
1.198121068,
3.140821009,
1.123696765,
2.01748842,
3.458058267,
1.635038737,
5.458407479,
6.179852579,
5.195381633,
2.644986767,
4.252896696,
2.597163801,
5.872314347,
6.654028091,
2.11119674,
0.460302863,
6.756871022,
2.403362822,
5.893034591,
3.778218335,
5.43816902,
5.542839234,
5.65216693,
1.71021211,
4.612719665,
6.546297757,
7.178341018,
2.096240974,
6.694803898,
5.764958935,
2.201532138,
4.721878102,
2.082695716,
4.852383976,
6.418319019,
4.356387674,
4.07437619,
6.292310474,
5.226073173,
1.59855843,
2.38973399,
3.375648178,
6.479934139,
3.782725275
]

indices = [0,
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76,
77,
79,
81,
82,
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
101,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114,
116,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157,
158,
159,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196,
197,
198,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221,
222,
223,
224,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247,
248,
249,
250,
251,
252,
253,
254,
255,
]

# Size of the desired matrix
n = 16

# Create a 16x16 matrix of NaNs
matrix_size = 16
matrix = np.full((matrix_size, matrix_size), np.nan)

# Fill the matrix
for idx, val in zip(indices, data):
    # Calculate row and column from index
    row = idx // matrix_size
    col = idx % matrix_size
    # Set the value in the matrix
    matrix[row, col] = val

# Plotting the heatmap
plt.figure(figsize=(8, 8))  # Increase figure size for better visibility
sns.heatmap(matrix, annot=True, fmt=".1f", linewidths=.5, square=True, cmap='YlOrBr')
plt.title('Approach Repulsive Force Heatmap (nN)')
plt.xlabel('X Position')
plt.ylabel('Y Position')
plt.show()
plt.savefig('Retract heatmap.png')
plt.close()
